# StateMachine/StateMachine.py

from TramAction import TramAction
import string
from server import server
from thread import *
import threading
from accelerometer import accelerometer
from measure import measure
class StateMachine:
    def __init__(self, initialState):
        self.currentState = initialState
        

    def runAll(self):      
        count = 1
        serv = server('',52001)
        serv1 = server('',52002)
        accel = accelerometer()
        meas = measure()
        #serv1.listun,(1,accel,)
        #serv.listun()
        #start_new_thread(serv.listun,(0, None,))
        #start_new_thread(serv1.listun,(1,accel,))
        thread1 = threading.Thread(target=serv.listun,args=(0, None))
        thread2 = threading.Thread(target=serv1.listun,args=(1,accel))
        thread1.start()
        thread2.start()
        #accel.p.kill()
        while count == 1 :
              serv.data = map(TramAction, serv.dataT)
	      self.currentState.run(serv,accel,meas)
              #print(serv1.dataT)   
              #print(serv.dataT)
             # print(accel.Data)
              #print(accel.Stats)
              
	      self.currentState = self.currentState.next(serv.data[0])
	      if(thread1.isAlive() == False) :#consider this for thread crashing
                 print("here")
                 sys.exit()
                                  #serv.connInfo[0].close()
                 #serv.connInfo[0], serv.connInfo[1] = serv.s.accept()
                 #serv = server('',52003)
		 #serv.notBusy=0
		 #start_new_thread(serv.listun,(0, None,))     
                 
               # serv.connInfo[0].close()
                #thread1.release()
                 #serv = server('',52003)
                 #thread1 = threading.Thread(target=serv.listun,args=(0, None))
                 #thread1.start()   

	      if(thread2.isAlive() == False) :
                 print("here")
               #  thread2.exit()
               #  thread2 = threading.Thread(target=serv1.listun,args=(1,accel))
                 #thread2.start()
                 #sys.exit()
                 #serv1.connInfo[0].close()
                 #serv1.connInfo[0], serv1.connInfo[1] = serv1.s.accept()
